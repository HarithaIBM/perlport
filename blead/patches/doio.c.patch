***************
*** 50,53 ****
--- 50,56 ----
  #endif
  
+ #include <stdio.h>
+ #include <stdlib.h>
+ 
  #ifdef O_EXCL
  #  define OPEN_EXCL O_EXCL
***************
*** 218,221 ****
--- 221,304 ----
  #endif
  }
+ 
+ #if defined(OEMVS)
+   #if (__CHARSET_LIB == 1)
+     static int setccsid(int fd, int ccsid) 
+     {
+       attrib_t attr;
+ 
+       memset(&attr, 0, sizeof(attr));
+       attr.att_filetagchg = 1;
+       attr.att_filetag.ft_ccsid = ccsid;
+       attr.att_filetag.ft_txtflag = 1;
+ 
+       return __fchattr(fd, &attr, sizeof(attr));
+     }
+     static int fdtagged(int fd) 
+     {
+       struct stat st;
+       int rc = fstat(fd, &st);
+       if (rc) {
+         return -1;
+       }
+       if (!S_ISREG(st.st_mode)) {
+          return -1;
+       }
+       return st.st_tag.ft_txtflag || st.st_tag.ft_deferred;
+     }
+ 
+     static void dump(int fd, int rc, const char* path, int oflag, int perm) 
+     {
+        char buffer[256];
+        sprintf(buffer, "echo 'dump: fd:%d rc:%d path:%s oflag:0x%X perm:0x%X\n' >>/tmp/dump.out", fd, rc, path, oflag, perm);
+        system(buffer);
+     }
+ 
+     static void updateccsid(int fd, const char* path, int oflag, int perm) 
+     { 
+       int rc;
+       int isconfig=0;
+       /* MSF - clearly this can not stay here. Keeping this in until I figure out what scenario causes lib/Config.pm to 
+        * have ASCII text written to it but tagged as EBCDIC
+        */
+       if (!strcmp(path, "lib/Config.pm")) {
+           isconfig=1;
+       }
+       if (oflag & O_CREAT) {
+         setccsid(fd, 819);
+       } else if (oflag & O_RDONLY) {
+         if (fdtagged(fd) == 0) {
+           if (isconfig) {
+             rc = setccsid(fd, 819); 
+           } else {
+             rc = setccsid(fd, 1047); 
+           } 
+         }
+       }
+     }
+ 
+     int asciiopen(const char* path, int oflag) 
+     {
+       int rc;
+       int fd = open(path, oflag);
+       if (fd == -1) { 
+         return fd;
+       }
+       updateccsid(fd, path, oflag, -1);
+       return fd; 
+     }
+ 
+     int asciiopen3(const char* path, int oflag, int perm) 
+     {
+       int rc;
+       int fd = open(path, oflag, perm);
+       if (fd == -1) { 
+         return fd;
+       }
+       updateccsid(fd, path, oflag, perm);
+       return fd;
+     } 
+   #endif
+ #endif
  
  int
