***************
*** 137,144 ****
  #--------------------------------------------------------------------------
  
! sub blacklist {
!     my ( $handle, @methods ) = @_;
  
!     unless ( defined $handle->{'blacklist'} ) {
          no strict 'refs';
  
--- 137,145 ----
  #--------------------------------------------------------------------------
  
! sub _exclude {
!     my ( $caller, $handle, @methods  ) = @_;
  
!     my $name='denylist';
!     unless ( defined $handle->{$name} ) {
          no strict 'refs';
  
***************
*** 146,153 ****
          # Explicitly exclude all methods in this package that start with an
          # underscore on principle.
!         $handle->{'blacklist'} = {
              map { $_ => 1 } (
                  qw/
                    blacklist
                    encoding
                    fail_with
--- 147,155 ----
          # Explicitly exclude all methods in this package that start with an
          # underscore on principle.
!         $handle->{$name} = {
              map { $_ => 1 } (
                  qw/
                    blacklist
+                   denylist
                    encoding
                    fail_with
***************
*** 161,164 ****
--- 163,167 ----
                    new
                    whitelist
+                   allowlist
                    /, grep { /^_/ } keys %{ __PACKAGE__ . "::" }
              ),
***************
*** 167,171 ****
  
      if ( scalar @methods ) {
!         $handle->{'blacklist'} = { %{ $handle->{'blacklist'} }, map { $_ => 1 } @methods };
      }
  
--- 170,174 ----
  
      if ( scalar @methods ) {
!         $handle->{$name} = { %{ $handle->{$name} }, map { $_ => 1 } @methods };
      }
  
***************
*** 174,182 ****
  }
  
! sub whitelist {
!     my ( $handle, @methods ) = @_;
      if ( scalar @methods ) {
!         $handle->{'whitelist'} = {} unless defined $handle->{'whitelist'};
!         $handle->{'whitelist'} = { %{ $handle->{'whitelist'} }, map { $_ => 1 } @methods };
      }
  
--- 177,198 ----
  }
  
! sub blacklist {
!     my ( $handle, @methods  ) = @_; 
!     _exclude ( "blacklist", $handle, @methods );
!     return;
! }
! 
! sub denylist {
!     my ( $handle, @methods  ) = @_; 
!     _exclude ( "denylist", $handle, @methods );
!     return;
! }
! 
! sub _include {
!     my ( $caller, $handle, @methods ) = @_;
!     my $name='allowlist';
      if ( scalar @methods ) {
!         $handle->{$name} = {} unless defined $handle->{$name};
!         $handle->{$name} = { %{ $handle->{$name} }, map { $_ => 1 } @methods };
      }
  
***************
*** 185,188 ****
--- 201,216 ----
  }
  
+ sub whitelist {
+     my ( $handle, @methods  ) = @_; 
+     _include ( "whitelist", $handle, @methods );
+     return;
+ }
+ 
+ sub allowlist {
+     my ( $handle, @methods  ) = @_; 
+     _include ( "allowlist", $handle, @methods );
+     return;
+ }
+ 
  #--------------------------------------------------------------------------
  
***************
*** 229,232 ****
--- 257,261 ----
      my $handle = bless {}, $class;
      $handle->blacklist;
+     $handle->denylist;
      $handle->init;
      return $handle;
***************
*** 680,685 ****
                      elsif($m =~ /^\w+$/s
                          && !$handle->{'blacklist'}{$m}
                          && ( !defined $handle->{'whitelist'} || $handle->{'whitelist'}{$m} )
!                         # exclude anything fancy and restrict to the whitelist/blacklist.
                      ) {
                          push @code, ' $_[0]->' . $m . '(';
--- 709,716 ----
                      elsif($m =~ /^\w+$/s
                          && !$handle->{'blacklist'}{$m}
+                         && !$handle->{'denylist'}{$m}
                          && ( !defined $handle->{'whitelist'} || $handle->{'whitelist'}{$m} )
!                         && ( !defined $handle->{'allowlist'} || $handle->{'allowlist'}{$m} )
!                         # exclude anything fancy and restrict to the allowlist/denylist (and historical whitelist/blacklist).
                      ) {
                          push @code, ' $_[0]->' . $m . '(';
